name: Thumbnails Rendering (debug)
on:
  push:
    branches: [ main, master ]
    paths: 
      - 'renderer/**'
      - 'Dockerfile'
      - 'metadata.json'
      - '.github/workflows/puppet.yml'
  pull_request:
    branches: [ main, master ]
jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      docker_build: ${{ steps.filter.outputs.Dockerfile }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          Dockerfile:
            - 'Dockerfile'
          renderer:
            - 'renderer/**'
  build-and-push-image:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.docker_build == 'true'
    permissions:
      contents: read
      packages: write # Required to push to GitHub Container Registry
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # e.g., ghcr.io/your-org/your-repo
          tags: |
            type=raw,value=latest
            type=sha,prefix=sha-,format=long # Adds a tag like 'sha-abcdef123...' for specific commit
            type=ref,event=branch # E.g., 'main'

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Looks for Dockerfile in the root of the repo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Use GitHub Actions cache for layers
          cache-to: type=gha,mode=max # Store layers back to GitHub Actions cache for subsequent builds
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    needs: build-and-push-image
    if: |
      always() && 
      (needs.build-and-push-image.result == 'success' || needs.build-and-push-image.result == 'skipped')
    permissions:
      contents: read
      packages: read
    container:
      image: ghcr.io/${{ github.repository }}:latest
    steps:
    - uses: actions/checkout@v4
 
    - name: Install dependencies
      run:  |
        npm ci
        mkdir debug
      working-directory: ./renderer
    - name: mysterious
      run: |
        CMD_OUT=$(which chromium)
        if [ -z "$CMD_OUT" ]; then
          CMD_OUT=$(which chromium-browser)
        fi
        echo "CHROMIUM_PATH=$CMD_OUT" >> $GITHUB_ENV
    - name: Run task
      env:
        WEBGL_WORKAROUND: amogus
      run: node main.ts ../metadata.json debug DEBUG
      working-directory: ./renderer
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: images
        path: renderer/debug/
        retention-days: 7
